Name,Testing Approach/Design Technique,Definition,Parent(s),Synonym(s),Notes
A/B Testing,Approach,"Testing ""that allows testers to determine which of two systems or components performs better"" (IEEE, 2022, p.1)","Statistical Testing (IEEE, 2022, p.1)","Split-Run Testing (IEEE, 2022, p.1)",
Accessibility Testing,Approach,"Testing ""used to measure the degree to which a test item can be operated by users with the widest possible range of characteristics and abilities"" (IEEE, 2022, p.1)","Usability Testing (IEEE, 2022, p.1)",,
Automated Testing,Approach,,,,
Back-to-Back Testing,Approach,"Testing ""whereby an alternative version of the system is used to generate expected results for comparison from the same test inputs"" (IEEE, 2022, p.2)",,"Differential Testing (IEEE, 2022, p.2)","Similar to testing using a pseudo-oracle (Barr et al., 2015, p. 515)"
Boundary Value Analysis,Design,"Testing ""based on exercising the boundaries of equivalence partitions"" (IEEE, 2022, p.2)","Equivalence Partitioning (IEEE, 2022, p.2)",,"See also Patton, 2006, pp. 70-74"
Branch Testing,Design,"Testing ""based on exercising branches in the control flow of the test item"" (IEEE, 2022, p. 2)","Structure-based Testing (IEEE, 2022, p.2)",,
Combinatorial Testing,Design,"Testing ""based on exercising combinations of P-V pairs"" (IEEE, 2022, p. 3)","Specification-based Testing (IEEE, 2022, p.3)",,"P-V (Parameter-Value) Pair: ""combination of a test item parameter with a value assigned to that parameter"" (IEEE, 2022, p. 7). See also Engström and Petersen, 2015, pp. 1-2"
Compatibility Testing,Approach,"""Testing that measures the degree to which a test item can function satisfactorily alongside other independent products in a shared environment (co-existence), and where necessary, exchanges information with other systems or components (interoperability)"" (IEEE, 2022, p. 3)",,,"Not atomic; implies the existence of ""co-existence testing"" and ""interoperability testing"""
Decision Table Testing,Design,"Testing ""based on exercising decision rules in a decision table"" (IEEE, 2022, p. 4)","Specification-based Testing (IEEE, 2022, p.4)",,"Decision Table: ""tabular representation of decision rules between causes (inputs described as Boolean conditions) and effects (outputs described as Boolean expressions)"" (IEEE, 2022, p.3). See also Peters and Pedrycz, 2000, pp. 448,450-453"
Decision Testing,Design,"Testing ""based on exercising decision outcomes in the control flow of the test item"" (IEEE, 2022, p.4)","Structure-based Testing (IEEE, 2022, p.4)",,
Dynamic Testing,Approach,"""Testing in which a test item is evaluated by executing it"" (IEEE, 2022, p. 4)",,,
Equivalence Partitioning,Design,"Testing ""designed to exercise equivalence partitions by using one or more representative members of each partition"" (IEEE, 2022, p. 4)",,"Equivalence Classing (Patton, 2006, p. 67)",
Error Guessing,Design,"Testing based on ""the tester's knowledge of past failures, or general knowledge of failure modes"" (IEEE, 2022, p. 4)","Experience-based Testing (IEEE, 2022, p. 4)",,"See also Patton, 2006, pp. 88-89"
Exhaustive Testing ,Approach,"Testing ""in which all combinations of input values and preconditions are tested"" (IEEE, 2022, p. 4)",,,"Impossible in most non-trivial situations (IEEE, 2022, p. 4; Peters and Pedrycz, 2000, pp. 439,461; van Vliet, 2000, p. 421)"
Experience-based Testing,Design,"Testing ""using the experience of testers to generate test cases"" (IEEE, 2022, p. 4)",,,"""Can include concepts such as test attacks, tours, and error taxonomies"" (IEEE, 2022, p. 4). See also Patton, 2006, pp. 88-89"
Exploratory Testing,Approach,"""Testing in which the tester spontaneously designs and executes tests"" to find ""hidden properties"" that ""can interfere with other properties of the software under test"" (IEEE, 2022, p. 5)","Experience-based Testing (IEEE, 2022, p. 5)",,"Patton says this is used when a specification is not available to determine and test the software's features (2006, p. 65)"
Fuzz Testing,Approach,"Testing where ""high volumes of random (or near random) data, called fuzz, are used to generate [test] inputs"" (IEEE, 2022, p.5)",,,"This is tagged (?) as ""artificial intelligence"", but I don't think AI is required"
Keyword-driven Testing,Design,"""Testing using test cases composed from keywords"": ""one or more words used as a reference to a specific set of actions intended to be performed during"" testing (IEEE, 2022, p. 5)",,,"Keywords use at least one verb (IEEE, 2022, p. 5)"
Load Testing,Approach,"Testing ""conducted to evaluate the behaviour of a test item under anticipated conditions of varying load"" (IEEE, 2022, p. 5)","Performance Testing (IEEE, 2022, p. 5)",,"Loads used are ""usually between anticipated conditions of low, typical, and peak usage"" (IEEE, 2022, p. 5). Patton defines this as running the software with as large of a load as possible (2006, p. 86)"
Maintainability Testing,Approach,"Testing ""conducted to evaluate the degree of effectiveness and efficiency with which a test item may be modified"" (IEEE, 2022, p. 5)",,,
Manual Testing,Approach,"""Humans performing tests by entering information into a test item and verifying the results"" (IEEE, 2022, p. 6)",,,
MC/DC Testing,Design,"Testing ""based on demonstrating that a single Boolean condition within a decision can independently affect the outcome of the decision"" (IEEE, 2022, p. 6)","Structure-based Testing (IEEE, 2022, p.6)","Modified Condition Decision Testing (IEEE, 2022, p. 6)",
Metamorphic Testing,Design,"Testing ""based on generating test cases based on existing test cases and metamorphic relations"" (IEEE, 2022, p. 6)","Specification-based Testing (IEEE, 2022, p. 6)",,"Metamorphic Relation: ""description of how changes to the test inputs for a test case affect the expected outputs"" (IEEE, 2022, p. 6). See also Kanewala and Yueh Chen, 2019"
Pairwise Testing,Design,"Testing ""in which test cases are designed to execute all possible discrete combinations of each pair of input parameters"" (IEEE, 2022, p. 7)","Combinatorial Testing (IEEE, 2022, p. 7)",,
Performance Testing,Approach,"Testing ""conducted to evaluate the degree to which a test item accomplishes its designated functions within given constraints of time and other resources"" (IEEE, 2022, p. 7)",,,
Portability Testing,Approach,"Testing ""conducted to evaluate the ease with which a test item can be transferred from one hardware or software environment to another, including the level of modification needed"" (IEEE, 2022, p. 7)",,,Related to compatibility testing?
Procedure Testing,Approach,"Testing ""conducted to evaluate whether procedural instructions for interacting with a test item or using its outputs meet user requirements and support the purpose of their use"" (IEEE, 2022, p. 7)","Functional Suitability Testing (IEEE, 2022, p. 7)",,
Random Testing,Design,"Testing ""based on generating test cases to exercise randomly selected test item inputs"" (IEEE, 2022, p. 7)","Specification-based Testing (IEEE, 2022, p. 7)",,"Often used to test for reliability (van Vliet, 2000, p. 439)"
