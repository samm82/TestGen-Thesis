Name,Field of Testing,Definition,Parent(s),Synonym(s),Notes
A/B Testing,Approach,"Testing ""that allows testers to determine which of two systems or components performs better"" (IEEE, 2022, p.1)","Statistical Testing (IEEE, 2022, pp.1, 35)","Split-Run Testing (IEEE, 2022, pp.1, 35)","""Not a test case generation technique as test inputs are not generated""; ""us[es] the existing system as a partial oracle"" (IEEE, 2022, p. 36)"
Acceptance Testing,Level,,"System Testing (van Vliet, 2000, p. 439)",,"Related to usability testing (van Vliet, 2000, p. 439)"
Accessibility Testing,"Type (IEEE, 2022, pp. 1, 22)","Testing ""used to measure the degree to which a test item can be operated by users with the widest possible range of characteristics and abilities"" (IEEE, 2022, p.1)","Usability Testing (IEEE, 2022, p.1) (although listed separately on p. 22)",,
All Combinations Testing,Design,,"Combinatorial Testing (IEEE, 2022, p. 22)",,
All-C-Uses Testing,Design,,"Data Flow Testing (IEEE, 2022, p. 22)",,"See also (van Vliet, 2000, pp. 424-425)"
All-Definitions Testing,Design,,"Data Flow Testing (IEEE, 2022, p. 22)",,"See also (van Vliet, 2000, pp. 424-425)"
All-DU-Paths Testing,Design,,"Data Flow Testing (IEEE, 2022, p. 22)",,"See also (van Vliet, 2000, pp. 424-425)"
All-P-Uses Testing,Design,,"Data Flow Testing (IEEE, 2022, p. 22)",,"See also (van Vliet, 2000, pp. 424-425)"
All-Uses Testing,Design,,"Data Flow Testing (IEEE, 2022, p. 22)",,"See also (van Vliet, 2000, pp. 424-425)"
Alpha Testing,Level,,"Acceptance Testing (IEEE, 2022, p. 22)",,
Attacks,Approach,"Testing with the goal of ""exploiting a specific … way of thinking about how and why software fails"" (IEEE, 2022, p. 34)","Experience-based Testing (IEEE, 2022, p. 34)",,"""An example of a security attack would be to block access to software libraries"" (IEEE, 2022, p. 34)"
Audits,Approach,"Testing ""used to verify compliance with standards"" (IEEE, 2022, p. 44)\",Static Testing,,See also ISO 24765
Automated Testing,Approach,"Testing ""executed by a test automation tool"" (IEEE, 2022, p. 35)","Scripted Testing (IEEE, 2022, p. 33)",,"Often cost-effective ""if a set of test cases is going to be executed 5 or more times"" (IEEE, 2022, p. 35)"
Back-to-Back Testing,Approach,"Testing ""whereby an alternative version of the system is used to generate expected results for comparison from the same test inputs"" (IEEE, 2022, p.2)",,"Differential Testing (IEEE, 2022, p.2)","""Not a test case generation technique as test inputs are not generated"" (IEEE, 2022, p. 35). Similar to testing using a pseudo-oracle (Barr et al., 2015, p. 515)"
Base Choice Testing,Design,,"Combinatorial Testing (IEEE, 2022, p. 22)",,
Beta Testing,Level,,"Acceptance Testing (IEEE, 2022, p. 22)",,
Boundary Value Analysis,Design,"Testing ""based on exercising the boundaries of equivalence partitions"" (IEEE, 2022, p.2)","Equivalence Partitioning (IEEE, 2022, p.2), Specification-based Testing (IEEE, 2022, p.22)",,"See also Patton, 2006, pp. 70-74"
Branch Condition Combination Testing,Design,,"Structure-based Testing (IEEE, 2022, p. 22)","(Multiple) Condition Testing? (Patton, 2006, p. 120), Extended Branch Coverage? (van Vliet, 2000, p. 422)",Difference between this and branch condition testing?
Branch Condition Testing,Design,,"Structure-based Testing (IEEE, 2022, p. 22)","(Multiple) Condition Testing? (Patton, 2006, p. 120), Extended Branch Coverage? (van Vliet, 2000, p. 422)",Difference between this and branch condition combination testing?
Branch Testing,Design,"Testing ""based on exercising branches in the control flow of the test item"" (IEEE, 2022, p. 2)","Structure-based Testing (IEEE, 2022, pp. 2, 22)",,
Capacity Testing,"Type (IEEE, 2022, p. 22)",,"Performance-related Testing (IEEE, 2022, p. 22)",,
Capture-Replay Driven Testing,Approach,,"Automated Testing (IEEE, 2022, pp. 22, 35)",,
Cause-Effect Testing,Design,,"Specification-based Testing (IEEE, 2022, p. 22)",,
Checklist-based Testing,Approach,"Testing generated ""based on a list of pre-determined items"" that ""can be based on personal experience, commonly found defects, and perceived risks"" (IEEE, 2022, p. 34)","Experience-based Testing (IEEE, 2022, p. 34)",,"""Often focused on a particular quality characteristic"" (IEEE, 2022, p. 34). See also Patton, 2006, pp. 61, 99-103"
Classification Tree Method,Design,,"Specification-based Testing (IEEE, 2022, p. 22)",,
Co-existence Testing,Type (inferred from compatibility and interoperability testing),"""Testing that measures the degree to which a test item can function satisfactorily alongside other independent products in a shared environment"" (IEEE, 2022, p. 3)","Compatibility Testing (IEEE, 2022, p. 3)",,"Not present in (IEEE, 2022); definition of ""coexistence"" also given in (International Software Testing Qualifications Board, 2022); see also ISO 25010"
Combinatorial Testing,Design,"Testing ""based on exercising combinations of P-V pairs"" (IEEE, 2022, p. 3)","Specification-based Testing (IEEE, 2022, pp. 3, 22)",,"P-V (Parameter-Value) Pair: ""combination of a test item parameter with a value assigned to that parameter"" (IEEE, 2022, p. 7). See also Engström and Petersen, 2015"
Compatibility Testing,"Type (IEEE, 2022, pp. 3, 22)","""Testing that measures the degree to which a test item can function satisfactorily alongside other independent products in a shared environment (co-existence), and where necessary, exchanges information with other systems or components (interoperability)"" (IEEE, 2022, p. 3)",,,"Not atomic; implies the existence of ""co-existence testing"" and ""interoperability testing"""
Continuous Testing,Approach,"Testing ""started via an automated process that can occur on-demand"" (IEEE, 2022, p.35)",Automated Testing,,
Conversion Testing,"Type (IEEE, 2022, p. 22)",,,,
Data Flow Testing,Design,,"Structure-based Testing (IEEE, 2022, p. 22)",,"See also (Patton, 2006, p. 114; van Vliet, 2000, pp. 424-425)"
Data-driven Testing,Approach,,"Automated Testing (IEEE, 2022, pp. 22, 35)",,
Decision Table Testing,Design,"Testing ""based on exercising decision rules in a decision table"" (IEEE, 2022, p. 4)","Specification-based Testing (IEEE, 2022, pp. 4, 22)",,"Decision Table: ""tabular representation of decision rules between causes (inputs described as Boolean conditions) and effects (outputs described as Boolean expressions)"" (IEEE, 2022, p.3). See also (Peters and Pedrycz, 2000, pp. 448, 450-453)"
Decision Testing,Design,"Testing ""based on exercising decision outcomes in the control flow of the test item"" (IEEE, 2022, p.4)","Structure-based Testing (IEEE, 2022, pp. 4, 22)",,
Disaster/Recovery Testing,"Type (IEEE, 2022, p. 22)",,,,Difference between this and recovery testing (in the context of performance)?
Dynamic Testing,Approach,"""Testing in which a test item is evaluated by executing it"" (IEEE, 2022, p. 4)",,,
Each Choice Testing,Design,,"Combinatorial Testing (IEEE, 2022, p. 22)",,
Equivalence Partitioning,Design,"Testing ""designed to exercise equivalence partitions by using one or more representative members of each partition"" (IEEE, 2022, p. 4)","Specification-based Testing (IEEE, 2022, p.22)","Equivalence Classing (Patton, 2006, p. 67)",
Error Guessing,Design,"Testing based on ""the tester's knowledge of past failures, or general knowledge of failure modes"" (IEEE, 2022, p. 4)","Experience-based Testing (IEEE, 2022, pp. 4, 22)",,"See also Patton, 2006, pp. 88-89"
Exhaustive Testing ,Approach,"Testing ""in which all combinations of input values and preconditions are tested"" (IEEE, 2022, p. 4)",,,"Impossible in most non-trivial situations (IEEE, 2022, p. 4; Peters and Pedrycz, 2000, pp. 439, 461; van Vliet, 2000, p. 421)"
Experience-based Testing,Design,"Testing ""using the experience of testers to generate test cases"" (IEEE, 2022, p. 4)","Dynamic Testing (IEEE, 2022, p. 17), Unscripted Testing (often) (IEEE, 2022, p. 34)",,"""Can include concepts such as test attacks, tours, and error taxonomies"" (IEEE, 2022, p. 4). See also Patton, 2006, pp. 88-89"
Exploratory Testing,Approach,"""Testing in which the tester spontaneously designs and executes tests"" to find ""hidden properties"" that ""can interfere with other properties of the software under test"" (IEEE, 2022, p. 5)","Experience-based Testing (IEEE, 2022, p. 5); Unscripted Testing (often) (IEEE, 2022, p. 33)",,"Often structured with ""session sheets"", which are also ""used to capture information about what was tested, and any anomalous behaviour observed"" (IEEE, 2022, p. 33). Patton says this is used when a specification is not available to determine and test the software's features (2006, p. 65)"
Factory Acceptance Testing,Level,,"Acceptance Testing (IEEE, 2022, p. 22)",,
Fault Injection Testing,Approach,,,,
Functional Suitability Testing,Approach,,,,Difference between this and functional testing?
Functional Testing,"Type (IEEE, 2022, p. 22)","Testing ""often used to check the implementation of functional requirements"" (IEEE, 2022, p. 21)",,"Black-Box Testing, Specification-based Testing (van Vliet, 2000, p. 399)","Is ""often"" necessary? Difference between this and specification-based testing (van Vliet, 2000, p. 399)? Related to specification-based testing (Souza et al., 2017, p. 3)?"
Fuzz Testing,Approach,"Testing where ""high volumes of random (or near random) data, called fuzz, are used to generate [test] inputs"" (IEEE, 2022, p.5)","Mathematical-based Testing (IEEE, 2022, p. 36)",,"This is tagged (?) as ""artificial intelligence"", but I don't think AI is required"
Installability Testing,"Type (IEEE, 2022, p. 22)",,,,"Sometimes considered a test level as ""installation testing"" (Peters and Pedrycz, 2000, p. 445); related to portability testing? (van Vliet, 2000, p. 439)"
Integration Testing,Level,,,,"See also (Patton, 2006, p. 109)"
Interoperability Testing,"Type (IEEE, 2022, p. 22)","""Testing that measures the degree to which a test item …, … where necessary, exchanges information with other systems or components"" (IEEE, 2022, p. 3)","Compatibility Testing (IEEE, 2022, p. 3)",,"Not defined in (IEEE, 2022) but used on pages 22 and 43 (although the third usage seems like it should be ""portabilty testing""); definition of ""interoperability"" also given in (International Software Testing Qualifications Board, 2022); see also ISO 25010"
Keyword-driven Testing,Design,"""Testing using test cases composed from keywords"": ""one or more words used as a reference to a specific set of actions intended to be performed during"" testing (IEEE, 2022, p. 5)","Automated Testing (IEEE, 2022, p. 35)",,"Keywords use at least one verb (IEEE, 2022, p. 5). See also ISO/IEC/IEEE 29119-5"
Load Testing,"Type (IEEE, 2022, pp. 5, 22)","Testing ""conducted to evaluate the behaviour of a test item under anticipated conditions of varying load"" (IEEE, 2022, p. 5)","Performance Testing (IEEE, 2022, p. 5), Performance-related Testing (IEEE, 2022, p. 22)",,"Loads used are ""usually between anticipated conditions of low, typical, and peak usage"" (IEEE, 2022, p. 5). Patton defines this as running the software with as large of a load as possible (2006, p. 86)"
Localization Testing,"Type (IEEE, 2022, p. 22)",,,,
Maintainability Testing,"Type (IEEE, 2022, pp. 5, 22)","Testing ""conducted to evaluate the degree of effectiveness and efficiency with which a test item may be modified"" (IEEE, 2022, p. 5)",,,
Manual Testing,Approach,"""Humans performing tests by entering information into a test item and verifying the results"" (IEEE, 2022, p. 6)","Scripted Testing (IEEE, 2022, p. 33)",,
Mathematical-based Testing,Approach,"Testing based on ""the test item's required behaviour, input space or output space"" when they ""can be described in sufficient detail"" (IEEE, 2022, p. 36)","Automatic Testing (usually) (IEEE, 2022, p. 36)",,"Related to computation error testing from Patton (2006, p. 101)? See also ISO/IEC/IEEE 29119-4"
MC/DC Testing,Design,"Testing ""based on demonstrating that a single Boolean condition within a decision can independently affect the outcome of the decision"" (IEEE, 2022, p. 6)","Structure-based Testing (IEEE, 2022, pp. 6, 22)","Modified Condition Decision Testing (IEEE, 2022, p. 6)",
Metamorphic Testing,Design,"Testing ""based on generating test cases based on existing test cases and metamorphic relations"" (IEEE, 2022, p. 6)","Specification-based Testing (IEEE, 2022, pp. 6, 22)",,"Metamorphic Relation: ""description of how changes to the test inputs for a test case affect the expected outputs"" (IEEE, 2022, p. 6). See also Kanewala and Yueh Chen, 2019"
Model Verification,Approach,,"Static Testing (IEEE, 2022, p. 17)",,
Model-based Testing,Approach,"Testing that uses ""formal or semi-formal representations of the required behaviour of a … [test] item"" to ""generate test cases systematically and automatically"" (IEEE, 2022, p. 32)",,"MBT (IEEE, 2022, p. 32)","Good potential for automation/generation! See also Souza et al., 2017 (term used on p. 3) and Engström and Petersen, 2015"
Negative Testing,Approach,,,"Invalid Testing, Dirty Testing (International Software Testing Qualifications Board, 2022)",
Operational Acceptance Testing,Level,,"Acceptance Testing (IEEE, 2022, p. 22)",,
Pairwise Testing,Design,"Testing ""in which test cases are designed to execute all possible discrete combinations of each pair of input parameters"" (IEEE, 2022, p. 7)","Combinatorial Testing (IEEE, 2022, pp. 7, 22)",,
Performance Testing,"Type (IEEE, 2022, pp. 7, 22, 27)","Testing ""conducted to evaluate the degree to which a test item accomplishes its designated functions within given constraints of time and other resources"" (IEEE, 2022, p. 7)","Performance-related Testing (IEEE, 2022, p. 22)",,Difference between this and performance-related testing?
Performance-related Testing,"Type (IEEE, 2022, p. 22)",,,,Difference between this and performance testing?
Portability Testing,"Type (IEEE, 2022, pp. 7, 22)","Testing ""conducted to evaluate the ease with which a test item can be transferred from one hardware or software environment to another, including the level of modification needed"" (IEEE, 2022, p. 7)",,,Related to compatibility testing?
Power Testing?,Approach,"Testing ""based on power consumption and battery failure"" (IEEE, 2022, p. 43); term is original",Performance-related Testing,,
Procedure Testing,"Type (IEEE, 2022, pp. 7, 22)","Testing ""conducted to evaluate whether procedural instructions for interacting with a test item or using its outputs meet user requirements and support the purpose of their use"" (IEEE, 2022, p. 7)","Functional Suitability Testing (IEEE, 2022, p. 7)",,
Production Verification Testing,Level,,"Acceptance Testing (IEEE, 2022, p. 22)",,
Random Testing,Design,"Testing ""based on generating test cases to exercise randomly selected test item inputs"" (IEEE, 2022, p. 7)","Specification-based Testing (IEEE, 2022, pp. 7, 22), Mathematical-based Testing (IEEE, 2022, p. 36)",,"Often used in reliability testing (van Vliet, 2000, p. 439)"
Recovery Testing,"Type (IEEE, 2022, p. 22)",,"Performance-related Testing (IEEE, 2022, p. 22)",,Difference between this and disaster/recovery testing?
Regression Testing,Approach,"""Testing performed following modifications to a test item or to its operational environment, to identify whether failures in unmodified parts of the test item occur"" (IEEE, 2022, p. 8)",,,"""Does not test that the modification works correctly""; this is ""retesting"" (IEEE, 2022, p. 8). Should be part of any test strategy (IEEE, 2022, p. 23). Sometimes considered a test level (Barbosa et al., 2006, p. 3)"
Reliability Testing,"Type (IEEE, 2022, pp. 8, 22)","""Testing conducted to evaluate the ability of a test item to perform its required functions, including evaluating the frequency with which failures occur"" (IEEE, 2022, p. 8)",,,"The use of the test item is under ""stated conditions for a specified period of time"" (IEEE, 2022, p. 8). Often uses random testing (van Vliet, 2000, p. 439)"
Requirements-based Testing,Design,"Testing ""based on exercising atomic requirements"" (IEEE, 2022, p. 8)","Specification-based Testing (IEEE, 2022, pp. 8, 22)",,
Response-Time Testing,Approach,,"Performance-related Testing (IEEE, 2022, p. 22)",,See also ISO 25010?
Retesting,Approach,"""Testing performed to check that modifications made to correct a fault have successfully removed the fault"" (IEEE, 2022, p. 8)",,"Confirmation Testing (IEEE, 2022, p. 8)","Should be part of any test strategy (IEEE, 2022, p. 23). ""In most cases, the original test cases associated with the fixed code are used for retesting, but they are sometimes supplemented by new test cases that provide improved coverage"" (IEEE, 2022, p. 35)"
Reviews,Approach,,"Static Testing (IEEE, 2022, p. 17)",,See also ISO/IEC 20246
Risk-based Testing,Design?,"Testing ""in which the management, selection, prioritization, and use of testing activities and resources are consciously based on corresponding types and levels of analysed risk"" (IEEE, 2022, p. 8)","Requirements-based Testing? (IEEE, 2022, p. 20)",,"Recommended technique for ""choosing the subset of possible tests that are most likely to uncover issues of interest"" (IEEE, 2022, p. 18); see also the ISO/IEC 25000 SQuaRE family of standards (IEEE, 2022, p. 20)"
Scenario Testing,Approach,"Testing ""based on exercising sequences of interactions between the test item and other systems,"" including users (IEEE, 2022, p. 9)","Specification-based Testing (IEEE, 2022, pp. 9, 22)",,
Scripted Testing,Approach,"""Testing performed based on a documented test script"" (IEEE, 2022, p. 9)","Manual Testing (usually) (IEEE, 2022, pp. 9, 33), Automatic Testing (""typically requires more detail"") (IEEE, 2022, p. 33)",,"""Helps achieve required test coverage levels"" (IEEE, 2022, p. 33)"
Security Testing,"Type (IEEE, 2022, pp. 9, 22, 27)","Testing ""conducted to evaluate the degree to which a test item, and associated data and information, are protected so that"" only ""authorized persons or systems"" can use them as intended (IEEE, 2022, p. 9)",,,
Specification-based Testing,Approach,"""Testing in which the principal test basis is the external inputs and outputs of the test item"" (IEEE, 2022, p. 9)","Dynamic Testing (IEEE, 2022, p. 17)","Black-Box Testing (IEEE, 2022, p. 9; International Software Testing Qualifications Board, 2022; van Vliet, 2000, p. 399), Closed-Box Testing (IEEE, 2022, p. 9), Functional Testing (van Vliet, 2000, p. 399)","Should be done before structure-based testing to avoid bias towards ""test cases based on how the module works"" (Patton, 2006, p. 113). Difference between this and functional testing (van Vliet, 2000, p. 399)?"
State Transition Testing,Design,"Testing ""based on exercising transitions in a state model"" (IEEE, 2022, p. 9)","Specification-based Testing (IEEE, 2022, pp. 9, 22)",,"See also Patton, 2006, pp. 79-87"
Statement Testing,Design,"Testing ""based on exercising executable statements in the source code of the test item"" (IEEE, 2022, p. 9)","Structure-based Testing (IEEE, 2022, p. 22)",,
Static Analysis,Approach,"""Involves the use of tools to detect anomalies in code or documents without execution"" (IEEE, 2022, p. 18)","Static Testing (IEEE, 2022, p. 17)",,
Static Testing,Approach,"""Testing in which a test item is examined against a set of quality or other criteria without the test item being executed"" (IEEE, 2022, p. 9)",,,"""Helps form an optimal test strategy"" and ""can be applied prior to dynamic testing and can find defects before test execution becomes possible"" (IEEE, 2022, p. 21)"
Statistical Testing,Approach,,,,
Stress Testing,"Type (IEEE, 2022, pp. 9, 22)","""Testing conducted to evaluate a test item's behaviour under"" unideal conditions (IEEE, 2022, p. 9)","Performance Testing (IEEE, 2022, p. 9), Performance-related Testing (IEEE, 2022, p. 22), Boundary Condition Testing (Patton, 2006, p. 86)",,"Unideal conditions include those of ""loading above anticipated or specified capacity requirements, or of resource availability below minimum specified requirements"" (IEEE, 2022, p. 9)"
Structure-based Testing,Approach,"Testing ""derived from an examination of the structure of the test item"" (IEEE, 2022, p. 9)","Dynamic Testing (IEEE, 2022, pp. 9, 17)","White-Box Testing (IEEE, 2022, p. 9; International Software Testing Qualifications Board, 2022; Patton, 2006, p. 55), Glass-Box Testing (IEEE, 2022, p. 9; International Software Testing Qualifications Board, 2022; Peters and Pedrycz, 2000, p. 439), Structural Testing (IEEE, 2022, p. 9; International Software Testing Qualifications Board, 2022), Clear-Box Testing (International Software Testing Qualifications Board, 2022; Patton, 2006, p. 55)",International Software Testing Qualifications Board (2022) has more synonyms
Syntax Testing,Design,,"Specification-based Testing (IEEE, 2022, p. 22)",,"See also (Peters and Pedrycz, 2000, pp. 448-449;  Intana et al., 2020, p. 260)"
System Integration Testing,Level,,,,
System Testing,Level,,,,
Tours,Approach,"Testing that is quite general and ""guides testers through the paths of an application like a tour guide leads a tourist through the landmarks of a big city"" (IEEE, 2022, p. 34)","Experience-based Testing (IEEE, 2022, p. 34)",,
Unit Testing,Level,,,"Module Testing (International Software Testing Qualifications Board, 2022; Patton, 2006, p. 109), Component Testing (International Software Testing Qualifications Board, 2022; Peters and Pedrycz, 2000, p. 444)","Since a component is ""a part of a system that can be tested in isolation"" (International Software Testing Qualifications Board, 2022), this seems like it could apply to the testing of both modules and specific functions. See also Engström and Petersen, 2015"
Unscripted Testing,Approach,"""Testing in which the tester's actions are not prescribed by written instructions in a test case"" (IEEE, 2022, p. 15)","Dynamic Testing (IEEE, 2022, p. 15)",,
Usability Testing,"Type (IEEE, 2022, pp. 22, 27)",,,,"Related to acceptance testing (van Vliet, 2000, p. 439)"
Use Case Testing,Design,,"Specification-based Testing (IEEE, 2022, p. 22)",,
User Acceptance Testing,Level,,"Acceptance Testing (IEEE, 2022, p. 22)",,
,,,,,
,,,,,See also the ISO/IEC/IEEE 29119 series (especially 29119-4); 29119-2 provides more information on test processes
